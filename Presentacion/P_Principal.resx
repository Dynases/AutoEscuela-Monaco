<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MetroTileFrame1.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="MetroTileFrame2.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btGastos.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vjg/pDq0rQAAAABJRU5ErkJggg==
</value>
  </data>
</root>